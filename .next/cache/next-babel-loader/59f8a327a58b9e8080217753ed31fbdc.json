{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { getProp, shuffleArray } from \"../../lib/utils\";\nimport Button from \"../Button\";\n\nclass Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isAnsweredCorrect: null,\n      isAnswered: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      const data = this.props.data;\n      const correctAnswer = getProp(data, \"correct_answer\");\n      const incorrrectAnswers = getProp(data, \"incorrect_answers\"); // create array with all answers as object\n\n      const answers = incorrrectAnswers.map(answer => {\n        return {\n          answer,\n          correct: false\n        };\n      });\n      answers.push({\n        answer: correctAnswer,\n        correct: true\n      });\n      const shuffledAnswers = shuffleArray(answers);\n      this.setState({\n        answers: shuffledAnswers\n      });\n      return;\n    });\n\n    _defineProperty(this, \"handleClick\", answer => {\n      this.setState({\n        isAnsweredCorrect: answer,\n        isAnswered: true\n      }, function () {\n        this.props.triggerParentUpdate(this.state.isAnsweredCorrect);\n      });\n    });\n  }\n\n  render() {\n    const data = this.props.data;\n    const question = getProp(data, \"question\");\n    const difficulty = getProp(data, \"difficulty\");\n    const category = getProp(data, \"category\").replace('Entertainment:', '');\n    const answers = this.state.answers;\n    return __jsx(\"div\", {\n      className: \"question-card\"\n    }, __jsx(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }), __jsx(\"div\", {\n      className: \"answers-container\"\n    }, this.state.answers && __jsx(\"div\", null, answers.map(answer => {\n      const theme = this.state.isAnsweredCorrect ? \"correct\" : \"incorrect\";\n      const correctColor = answer.correct && this.state.isAnsweredCorrect && \"green\";\n      const showCorrect = answer.correct && this.state.isAnswered && !this.state.isAnsweredCorrect && \"reveal-correct\";\n      return __jsx(Button, {\n        key: answer.answer,\n        className: `question ${correctColor} ${showCorrect}`,\n        disabled: this.state.isAnswered,\n        onClick: () => this.handleClick(answer.correct)\n      }, __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: answer.answer\n        }\n      }));\n    }))), __jsx(\"div\", {\n      className: \"difficulty-container\"\n    }, \"Level:\", \" \", difficulty && difficulty === \"easy\" && __jsx(\"span\", null, __jsx(\"i\", {\n      className: `fas fa-circle ${difficulty}`\n    })), difficulty && difficulty === \"medium\" && __jsx(\"span\", null, __jsx(\"i\", {\n      className: `fas fa-circle ${difficulty}`\n    }), __jsx(\"i\", {\n      className: `fas fa-circle ${difficulty}`\n    })), difficulty && difficulty === \"hard\" && __jsx(\"span\", null, __jsx(\"i\", {\n      className: `fas fa-circle ${difficulty}`\n    }), __jsx(\"i\", {\n      className: `fas fa-circle ${difficulty}`\n    }), __jsx(\"i\", {\n      className: `fas fa-circle ${difficulty}`\n    }))), __jsx(\"span\", {\n      style: {\n        fontSize: '12px'\n      },\n      dangerouslySetInnerHTML: {\n        __html: category\n      }\n    }));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/michelekempinsky2/Development/projects/Trivia-App/src/components/QuestionSingle/index.js"],"names":["React","getProp","shuffleArray","Button","Question","Component","isAnsweredCorrect","isAnswered","data","props","correctAnswer","incorrrectAnswers","answers","map","answer","correct","push","shuffledAnswers","setState","triggerParentUpdate","state","render","question","difficulty","category","replace","textAlign","__html","theme","correctColor","showCorrect","handleClick","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { getProp, shuffleArray } from \"../../lib/utils\";\nimport Button from \"../Button\";\n\nclass Question extends React.Component {\n  state = {\n    isAnsweredCorrect: null,\n    isAnswered: null\n  };\n  componentDidMount = () => {\n    const data = this.props.data;\n    const correctAnswer = getProp(data, \"correct_answer\");\n    const incorrrectAnswers = getProp(data, \"incorrect_answers\");\n    // create array with all answers as object\n    const answers = incorrrectAnswers.map(answer => {\n      return { answer, correct: false };\n    });\n    answers.push({ answer: correctAnswer, correct: true });\n    const shuffledAnswers = shuffleArray(answers);\n    this.setState({\n      answers: shuffledAnswers\n    });\n    return;\n  };\n\n  handleClick = answer => {\n    this.setState(\n      {\n        isAnsweredCorrect: answer,\n        isAnswered: true\n      },\n      function() {\n        this.props.triggerParentUpdate(this.state.isAnsweredCorrect);\n      }\n    );\n  };\n\n  render() {\n    const data = this.props.data;\n    const question = getProp(data, \"question\");\n    const difficulty = getProp(data, \"difficulty\");\n    const category = getProp(data, \"category\").replace('Entertainment:', '');\n    const answers = this.state.answers;\n    return (\n      <div className=\"question-card\">\n        <p\n          style={{ textAlign: \"center\" }}\n          dangerouslySetInnerHTML={{ __html: question }}\n        />\n        <div className=\"answers-container\">\n          {this.state.answers && (\n            <div>\n              {answers.map(answer => {\n                const theme = this.state.isAnsweredCorrect\n                  ? \"correct\"\n                  : \"incorrect\";\n                const correctColor =\n                  answer.correct && this.state.isAnsweredCorrect && \"green\";\n                const showCorrect =\n                  answer.correct &&\n                  this.state.isAnswered &&\n                  !this.state.isAnsweredCorrect &&\n                  \"reveal-correct\";\n\n                return (\n                  <Button\n                    key={answer.answer}\n                    className={`question ${correctColor} ${showCorrect}`}\n                    disabled={this.state.isAnswered}\n                    onClick={() => this.handleClick(answer.correct)}\n                  >\n                    <span dangerouslySetInnerHTML={{ __html: answer.answer }} />\n                  </Button>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"difficulty-container\">\n          Level:{\" \"}\n          {difficulty && difficulty === \"easy\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n          {difficulty && difficulty === \"medium\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n          {difficulty && difficulty === \"hard\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n        </div>\n        <span style={{fontSize: '12px'}} dangerouslySetInnerHTML={{__html: category}}/>\n      </div>\n    );\n  }\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}