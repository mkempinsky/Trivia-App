{"ast":null,"code":"export const getProp = (obj, keys, defaultValue = null) => {\n  const objectKeys = keys.split(\".\");\n  const allKeys = objectKeys.reduce((acc, key) => {\n    const match = key.match(/\\[\\d\\]$/);\n\n    if (match) {\n      const propName = key.slice(0, match.index);\n      propName && acc.push(propName);\n      const index = +key.slice(match.index + 1, key.length - 1);\n      acc.push(index);\n    } else {\n      acc.push(key);\n    }\n\n    return acc;\n  }, []);\n  const result = allKeys.reduce((acc, cur) => {\n    return acc === null || acc === undefined ? acc : acc[cur];\n  }, obj);\n  return result !== undefined && result !== null ? result : defaultValue;\n};\nexport const shuffleArray = array => {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};","map":{"version":3,"sources":["/Users/michelekempinsky2/Development/projects/Trivia-App/src/lib/utils.js"],"names":["getProp","obj","keys","defaultValue","objectKeys","split","allKeys","reduce","acc","key","match","propName","slice","index","push","length","result","cur","undefined","shuffleArray","array","currentIndex","temporaryValue","randomIndex","Math","floor","random"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,YAAY,GAAG,IAA3B,KAAoC;AACzD,QAAMC,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAnB;AACA,QAAMC,OAAO,GAAGF,UAAU,CAACG,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9C,UAAMC,KAAK,GAAGD,GAAG,CAACC,KAAJ,CAAU,SAAV,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACT,YAAMC,QAAQ,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,KAAK,CAACG,KAAnB,CAAjB;AACAF,MAAAA,QAAQ,IAAIH,GAAG,CAACM,IAAJ,CAASH,QAAT,CAAZ;AACA,YAAME,KAAK,GAAG,CAACJ,GAAG,CAACG,KAAJ,CAAUF,KAAK,CAACG,KAAN,GAAc,CAAxB,EAA2BJ,GAAG,CAACM,MAAJ,GAAa,CAAxC,CAAf;AACAP,MAAAA,GAAG,CAACM,IAAJ,CAASD,KAAT;AACD,KALD,MAKO;AACLL,MAAAA,GAAG,CAACM,IAAJ,CAASL,GAAT;AACD;;AAED,WAAOD,GAAP;AACD,GAZe,EAYb,EAZa,CAAhB;AAcA,QAAMQ,MAAM,GAAGV,OAAO,CAACC,MAAR,CAAe,CAACC,GAAD,EAAMS,GAAN,KAAc;AAC1C,WAAOT,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKU,SAAxB,GAAoCV,GAApC,GAA0CA,GAAG,CAACS,GAAD,CAApD;AACD,GAFc,EAEZhB,GAFY,CAAf;AAIA,SAAOe,MAAM,KAAKE,SAAX,IAAwBF,MAAM,KAAK,IAAnC,GAA0CA,MAA1C,GAAmDb,YAA1D;AACD,CArBM;AAuBP,OAAO,MAAMgB,YAAY,GAAGC,KAAK,IAAI;AACnC,MAAIC,YAAY,GAAGD,KAAK,CAACL,MAAzB;AAAA,MACEO,cADF;AAAA,MAEEC,WAFF,CADmC,CAKnC;;AACA,SAAO,MAAMF,YAAb,EAA2B;AACzB;AACAE,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB,CAHyB,CAKzB;;AACAC,IAAAA,cAAc,GAAGF,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACG,WAAD,CAA3B;AACAH,IAAAA,KAAK,CAACG,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,SAAOF,KAAP;AACD,CAlBM","sourcesContent":["export const getProp = (obj, keys, defaultValue = null) => {\n  const objectKeys = keys.split(\".\");\n  const allKeys = objectKeys.reduce((acc, key) => {\n    const match = key.match(/\\[\\d\\]$/);\n    if (match) {\n      const propName = key.slice(0, match.index);\n      propName && acc.push(propName);\n      const index = +key.slice(match.index + 1, key.length - 1);\n      acc.push(index);\n    } else {\n      acc.push(key);\n    }\n\n    return acc;\n  }, []);\n\n  const result = allKeys.reduce((acc, cur) => {\n    return acc === null || acc === undefined ? acc : acc[cur];\n  }, obj);\n\n  return result !== undefined && result !== null ? result : defaultValue;\n};\n\nexport const shuffleArray = array => {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n"]},"metadata":{},"sourceType":"module"}