{"version":3,"file":"static/webpack/static/development/pages/index.js.30379851ec6b0070fe89.hot-update.js","sources":["webpack:///./src/lib/styles.js"],"sourcesContent":["// COLORS\nexport const blue = shade => {\n    const shades = {\n        200: '#4E9EE0',\n        300: '#182957',\n        400: '#1C2838',\n        500: '#354763',\n        550: '#0F2555',\n        600: '#2F77B2',\n        700: '#27323F',\n        default: '#2F77B2'\n    };\n    return shades[+shade] || shades.default;\n};\n\nexport const yellow = (shade, opacity = 1) => {\n    const shades = {\n        500: `rgba(255, 179, 71, ${opacity})`,\n        default: `rgba(255, 179, 71, ${opacity})`\n    };\n    return shades[+shade] || shades.default;\n}\n\nexport const dropShadow = shadow => {\n    const shadows = {\n        500: '0 14px 28px 0 rgba(37, 79, 115, 0.11)',\n        default: '0 14px 28px 0 rgba(37, 79, 115, 0.11)'\n    };\n    return shadows[+shadow] || shadows.default;\n};\n\n\n\n// GLOBAL STYLES\nexport const globalStyles = `\n\t* {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbox-sizing: border-box;\n\t\t-webkit-box-sizing: border-box;\n\t}\n\thtml, body {\n\t\theight: 100%;\n        font-family: 'Gudea', sans-serif;\n\t\tcolor: #1C2838;\n\t\tfont-size: 16px;\n\t}\n\thtml {\n\t\t-webkit-font-smoothing: antialiased;\n\t}\n    h1 {\n        font-family: 'Comfortaa', cursive;\n        font-weight: Bold;\n        font-size: 22px;\n    }\n    h2 {\n        font-family: 'Comfortaa', cursive;\n        font-size: 20px;\n    }\n\t`;\n\nexport const px = value => {\n    if (typeof value === 'number') {\n        return value + 'px';\n    } else if (typeof value === 'string') {\n        /**\n         * Check if already ends with px, em, rem, etc.\n         */\n        const hasLetters = value.match(/\\d/g);\n\n        if (hasLetters) {\n            let numsOnly = hasLetters.join('');\n            return numsOnly + 'px';\n        }\n\n        return value + 'px';\n    } else {\n        console.log('Must pass string or number to px()');\n        return '25px';\n    }\n};\n\nexport const BREAKPOINT = '992px';\nexport const BREAKPOINT_PX = px(BREAKPOINT);\n\nexport const MAX_WIDTH = '1280';\nexport const MAX_WIDTH_PX = px(MAX_WIDTH);\n\n\nexport function hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return result\n        ? `${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(\n              result[3],\n              16\n          )}`\n        : '0, 0, 0';\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAIA;AA2BA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAMA;;;;A","sourceRoot":""}