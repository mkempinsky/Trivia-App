{"version":3,"sources":["lib/utils.js","components/Button/index.js","components/QuestionSingle/index.js","components/Questions/index.js","pages/trivia.js","index.js"],"names":["getProp","obj","keys","defaultValue","arguments","length","undefined","result","split","reduce","acc","key","match","propName","slice","index","push","cur","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","Button","props","react_default","a","createElement","children","Question","state","isAnsweredCorrect","isAnswered","componentDidMount","data","_this","correctAnswer","answers","map","answer","correct","shuffledAnswers","setState","handleClick","this","triggerParentUpdate","_this2","question","difficulty","category","replace","console","log","className","style","textAlign","dangerouslySetInnerHTML","__html","correctColor","showCorrect","components_Button","concat","disabled","onClick","fontSize","React","Component","levels","categories","title","Questions","isLoaded","error","questions","points","fetchQuestions","level","fetch","then","res","json","results","updateCounter","prevState","Object","objectSpread","handleLevelClick","handleCategoryClick","questionsCount","currentLevel","currentCategory","active","toUpperCase","flex","margin","QuestionSingle","Trivia","correctAnswers","maxWidth","components_Questions","rootElement","document","getElementById","ReactDOM","render","trivia"],"mappings":"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","file":"static/js/main.595b1e1e.chunk.js","sourcesContent":["export const getProp = (obj, keys, defaultValue = null) => {\n  const objectKeys = keys.split(\".\");\n  const allKeys = objectKeys.reduce((acc, key) => {\n    const match = key.match(/\\[\\d\\]$/);\n    if (match) {\n      const propName = key.slice(0, match.index);\n      propName && acc.push(propName);\n      const index = +key.slice(match.index + 1, key.length - 1);\n      acc.push(index);\n    } else {\n      acc.push(key);\n    }\n\n    return acc;\n  }, []);\n\n  const result = allKeys.reduce((acc, cur) => {\n    return acc === null || acc === undefined ? acc : acc[cur];\n  }, obj);\n\n  return result !== undefined && result !== null ? result : defaultValue;\n};\n\nexport const shuffleArray = array => {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n","import React from \"react\";\nconst Button = props => {\n  return (\n    <div>\n      <button {...props}>{props.children}</button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { getProp, shuffleArray } from \"../../lib/utils\";\nimport Button from \"../Button\";\n\nclass Question extends React.Component {\n  state = {\n    isAnsweredCorrect: null,\n    isAnswered: null\n  };\n  componentDidMount = () => {\n    const data = this.props.data;\n    const correctAnswer = getProp(data, \"correct_answer\");\n    const incorrrectAnswers = getProp(data, \"incorrect_answers\");\n    // create array with all answers as object\n    const answers = incorrrectAnswers.map(answer => {\n      return { answer, correct: false };\n    });\n    answers.push({ answer: correctAnswer, correct: true });\n    const shuffledAnswers = shuffleArray(answers);\n    this.setState({\n      answers: shuffledAnswers\n    });\n    return;\n  };\n\n  handleClick = answer => {\n    this.setState(\n      {\n        isAnsweredCorrect: answer,\n        isAnswered: true\n      },\n      function() {\n        this.props.triggerParentUpdate(this.state.isAnsweredCorrect);\n      }\n    );\n  };\n\n  render() {\n    const data = this.props.data;\n    const question = getProp(data, \"question\");\n    const difficulty = getProp(data, \"difficulty\");\n    const category = getProp(data, \"category\").replace('Entertainment:', '');\n    const answers = this.state.answers;\n    console.log(category);\n    return (\n      <div className=\"question-card\">\n        <p\n          style={{ textAlign: \"center\" }}\n          dangerouslySetInnerHTML={{ __html: question }}\n        />\n        <div className=\"answers-container\">\n          {this.state.answers && (\n            <div>\n              {answers.map(answer => {\n                const theme = this.state.isAnsweredCorrect\n                  ? \"correct\"\n                  : \"incorrect\";\n                const correctColor =\n                  answer.correct && this.state.isAnsweredCorrect && \"green\";\n                const showCorrect =\n                  answer.correct &&\n                  this.state.isAnswered &&\n                  !this.state.isAnsweredCorrect &&\n                  \"reveal-correct\";\n\n                return (\n                  <Button\n                    key={answer.answer}\n                    className={`question ${correctColor} ${showCorrect}`}\n                    disabled={this.state.isAnswered}\n                    onClick={() => this.handleClick(answer.correct)}\n                  >\n                    <span dangerouslySetInnerHTML={{ __html: answer.answer }} />\n                  </Button>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"difficulty-container\">\n          Level:{\" \"}\n          {difficulty && difficulty === \"easy\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n          {difficulty && difficulty === \"medium\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n          {difficulty && difficulty === \"hard\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n        </div>\n        <span style={{fontSize: '12px'}} dangerouslySetInnerHTML={{__html: category}}/>\n      </div>\n    );\n  }\n}\nexport default Question;\n","import React from \"react\";\nimport Question from \"../QuestionSingle\";\nimport { getProp, shuffleArray } from \"../../lib/utils\";\n\nconst levels = [\"random\", \"easy\", \"medium\", \"hard\"];\nconst categories = [\n  {title: 'General Knowledge', key: 9},\n  {title: 'Television', key: 14},\n  {title: 'Film', key: 11},\n  {title: 'Music', key: 12},\n  {title: 'Science & Nature', key: 17},\n  {title: 'Sports', key: 21},\n  {title: 'Geography', key: 22},\n  {title: 'History', key: 23},\n  {title: 'Politics', key: 24},\n  {title: 'Celebrities', key: 26}, \n  {title: 'Animals', key: 27}\n]\n\nclass Questions extends React.Component {\n  state = {\n    isLoaded: false,\n    error: null,\n    questions: [],\n    points: 0,\n    difficulty: null,\n    category: null,\n  };\n\n  fetchQuestions = () => {\n    console.log(\"fetching questions\");\n    let level =\n      this.state.difficulty === \"random\" || this.state.difficulty === null\n        ? \"\"\n        : `&difficulty=${this.state.difficulty}`;\n    let category = this.state.category === null ? `&category=${9}` : `&category=${this.state.category}`;\n    fetch(`https://opentdb.com/api.php?amount=10${level}${category}`)\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState(\n            {\n              isLoaded: true,\n              points: 0,\n              questions: result.results\n            },\n            () => {\n              console.log(this.state);\n            }\n          );\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  };\n  componentDidMount = () => {\n    this.fetchQuestions();\n  };\n  updateCounter = isAnsweredCorrect => {\n    if (isAnsweredCorrect) {\n      this.setState(prevState => ({\n        ...prevState,\n        points: ++this.state.points\n      }));\n    }\n  };\n  handleLevelClick = level => {\n    this.setState(\n      {\n        difficulty: level\n      },\n      () => {\n        this.fetchQuestions();\n      }\n    );\n  };\n  handleCategoryClick = category => {\n    this.setState(\n      {\n        category\n      },\n      () => {\n        this.fetchQuestions();\n      }\n    );\n  };\n\n  render() {\n    const questions = this.state.questions;\n    const questionsCount = questions.length;\n    const currentLevel = this.state.difficulty || \"random\";\n    const currentCategory = this.state.category || 9;\n\n    return (\n      <div>\n        <div className=\"filters\">\n          <p>Select a level:</p>\n          <div className=\"levels-container\">\n            {levels.map(level => {\n              const active = level === currentLevel ? \"active\" : \"\";\n              return (\n                <button\n                  key={level}\n                  className={`levels ${active}`}\n                  onClick={() => this.handleLevelClick(level)}\n                >\n                  {level.toUpperCase()}\n                </button>\n              );\n            })}\n          </div>\n          <p>Select a Category:</p>\n          <div className=\"levels-container\">\n            {categories.map(category => {\n              const active = category.key === currentCategory ? \"active\" : \"\";\n              return (\n                <button\n                  key={category.key}\n                  className={`categories ${active}`}\n                  onClick={() => this.handleCategoryClick(category.key)}\n                >\n                  {category.title.toUpperCase()}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"counter\" style={{flex: '1'}}>\n            <h3 style={{margin: '0 0 5px 0'}}>Points:</h3>\n            {this.state.points}/{questionsCount}\n          </div>\n          <div style={{flex: '2'}}>\n            {questions.map(question => {\n              return (\n                <Question\n                  key={question.question}\n                  data={question}\n                  triggerParentUpdate={this.updateCounter}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questions;\n","import React from \"react\";\nimport Questions from \"../components/Questions\";\nimport Footer from \"../components/Footer\";\n\nclass Trivia extends React.Component {\n  state = {\n    correctAnswers: null\n  };\n  render() {\n    return (\n      <div style={{maxWidth: '700px', margin: '0 auto'}}>\n        <h1>Totally Trivia</h1>\n        <Questions />\n      </div>\n    );\n  }\n}\nexport default Trivia;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Trivia from \"./pages/trivia\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Trivia />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}