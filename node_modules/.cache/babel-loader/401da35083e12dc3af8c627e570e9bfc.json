{"ast":null,"code":"import _classCallCheck from \"/Users/michelek/sites/Trivia-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michelek/sites/Trivia-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michelek/sites/Trivia-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michelek/sites/Trivia-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michelek/sites/Trivia-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michelek/sites/Trivia-App/src/components/QuestionSingle/index.js\";\nimport React from \"react\";\nimport { getProp, shuffleArray } from \"../../lib/utils\";\nimport Button from \"../Button\";\n\nvar Question =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Question, _React$Component);\n\n  function Question() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Question)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isAnsweredCorrect: null,\n      isAnswered: null\n    };\n\n    _this.componentDidMount = function () {\n      var data = _this.props.data;\n      var correctAnswer = getProp(data, \"correct_answer\");\n      var incorrrectAnswers = getProp(data, \"incorrect_answers\"); // create array with all answers as object\n\n      var answers = incorrrectAnswers.map(function (answer) {\n        return {\n          answer: answer,\n          correct: false\n        };\n      });\n      answers.push({\n        answer: correctAnswer,\n        correct: true\n      });\n      var shuffledAnswers = shuffleArray(answers);\n\n      _this.setState({\n        answers: shuffledAnswers\n      });\n\n      return;\n    };\n\n    _this.handleClick = function (answer) {\n      _this.setState({\n        isAnsweredCorrect: answer,\n        isAnswered: true\n      }, function () {\n        this.props.triggerParentUpdate(this.state.isAnsweredCorrect);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      var question = getProp(data, \"question\");\n      var difficulty = getProp(data, \"difficulty\");\n      var category = getProp(data, \"category\");\n      var answers = this.state.answers;\n      console.log(category);\n      return React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        dangerouslySetInnerHTML: {\n          __html: question\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"answers-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.answers && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, answers.map(function (answer) {\n        var theme = _this2.state.isAnsweredCorrect ? \"correct\" : \"incorrect\";\n        var correctColor = answer.correct && _this2.state.isAnsweredCorrect && \"green\";\n        var showCorrect = answer.correct && _this2.state.isAnswered && !_this2.state.isAnsweredCorrect && \"reveal-correct\";\n        return React.createElement(Button, {\n          key: answer.answer,\n          className: \"question \".concat(correctColor, \" \").concat(showCorrect),\n          disabled: _this2.state.isAnswered,\n          onClick: function onClick() {\n            return _this2.handleClick(answer.correct);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: answer.answer\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      }))), React.createElement(\"div\", {\n        className: \"difficulty-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Level:\", \" \", difficulty && difficulty === \"easy\" && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-circle \".concat(difficulty),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), difficulty && difficulty === \"medium\" && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-circle \".concat(difficulty),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-circle \".concat(difficulty),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), difficulty && difficulty === \"hard\" && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-circle \".concat(difficulty),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-circle \".concat(difficulty),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-circle \".concat(difficulty),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Question;\n}(React.Component);\n\nexport default Question;","map":{"version":3,"sources":["/Users/michelek/sites/Trivia-App/src/components/QuestionSingle/index.js"],"names":["React","getProp","shuffleArray","Button","Question","state","isAnsweredCorrect","isAnswered","componentDidMount","data","props","correctAnswer","incorrrectAnswers","answers","map","answer","correct","push","shuffledAnswers","setState","handleClick","triggerParentUpdate","question","difficulty","category","console","log","textAlign","__html","theme","correctColor","showCorrect","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { getProp, shuffleArray } from \"../../lib/utils\";\nimport Button from \"../Button\";\n\nclass Question extends React.Component {\n  state = {\n    isAnsweredCorrect: null,\n    isAnswered: null\n  };\n  componentDidMount = () => {\n    const data = this.props.data;\n    const correctAnswer = getProp(data, \"correct_answer\");\n    const incorrrectAnswers = getProp(data, \"incorrect_answers\");\n    // create array with all answers as object\n    const answers = incorrrectAnswers.map(answer => {\n      return { answer, correct: false };\n    });\n    answers.push({ answer: correctAnswer, correct: true });\n    const shuffledAnswers = shuffleArray(answers);\n    this.setState({\n      answers: shuffledAnswers\n    });\n    return;\n  };\n\n  handleClick = answer => {\n    this.setState(\n      {\n        isAnsweredCorrect: answer,\n        isAnswered: true\n      },\n      function() {\n        this.props.triggerParentUpdate(this.state.isAnsweredCorrect);\n      }\n    );\n  };\n\n  render() {\n    const data = this.props.data;\n    const question = getProp(data, \"question\");\n    const difficulty = getProp(data, \"difficulty\");\n    const category = getProp(data, \"category\");\n    const answers = this.state.answers;\n    console.log(category);\n    return (\n      <div className=\"question-card\">\n        <p\n          style={{ textAlign: \"center\" }}\n          dangerouslySetInnerHTML={{ __html: question }}\n        />\n        <div className=\"answers-container\">\n          {this.state.answers && (\n            <div>\n              {answers.map(answer => {\n                const theme = this.state.isAnsweredCorrect\n                  ? \"correct\"\n                  : \"incorrect\";\n                const correctColor =\n                  answer.correct && this.state.isAnsweredCorrect && \"green\";\n                const showCorrect =\n                  answer.correct &&\n                  this.state.isAnswered &&\n                  !this.state.isAnsweredCorrect &&\n                  \"reveal-correct\";\n\n                return (\n                  <Button\n                    key={answer.answer}\n                    className={`question ${correctColor} ${showCorrect}`}\n                    disabled={this.state.isAnswered}\n                    onClick={() => this.handleClick(answer.correct)}\n                  >\n                    <span dangerouslySetInnerHTML={{ __html: answer.answer }} />\n                  </Button>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"difficulty-container\">\n          Level:{\" \"}\n          {difficulty && difficulty === \"easy\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n          {difficulty && difficulty === \"medium\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n          {difficulty && difficulty === \"hard\" && (\n            <span>\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n              <i className={`fas fa-circle ${difficulty}`} />\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}